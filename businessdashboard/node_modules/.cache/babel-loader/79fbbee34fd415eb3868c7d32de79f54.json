{"ast":null,"code":"var url = require('url');\n\nvar util = require('util');\n\nvar _ = require('lodash');\n\nvar S = require('string');\n\nvar debug = require('debug')('google-finance:utils');\n\nvar FeedParser = require('feedparser');\n\nvar Promise = require('bluebird');\n\nvar request = require('request-promise');\n\nfunction camelize(text) {\n  return S(text).slugify().camelize().s;\n}\n\nfunction download(uri, qs, optionalHttpRequestOptions) {\n  debug(url.format({\n    pathname: uri,\n    query: qs\n  }));\n  return request(_.extend({\n    uri: uri,\n    qs: qs\n  }, optionalHttpRequestOptions));\n}\n\nfunction downloadRSS(uri, qs, optionalHttpRequestOptions) {\n  debug(url.format({\n    pathname: uri,\n    query: qs\n  }));\n  return new Promise(function (resolve, reject) {\n    var parser = new FeedParser();\n    var result = [];\n    var req = request(_.extend({\n      uri: uri,\n      qs: qs\n    }, optionalHttpRequestOptions));\n    req.on('error', function (err) {\n      reject(err);\n    }).on('response', function (res) {\n      if (res.statusCode !== 200) {\n        return reject(new Error(util.format('status %d', res.statusCode)));\n      }\n\n      this.pipe(parser);\n    });\n    parser.on('error', function (err) {\n      reject(err);\n    }).on('end', function () {\n      resolve(result);\n    }).on('readable', function () {\n      var item;\n\n      while (item = this.read()) {\n        result.push(item);\n      }\n    });\n  });\n}\n\nfunction getDateRanges(from, to) {\n  var result = [];\n  var d = from.clone();\n\n  while (true) {\n    var d2 = d.clone().add(10, 'years').subtract(1, 'days');\n\n    if (d2.isAfter(to)) {\n      result.push({\n        from: d.clone(),\n        to: to.clone()\n      });\n      break;\n    } else {\n      result.push({\n        from: d.clone(),\n        to: d2.clone()\n      });\n    }\n\n    d = d2.add(1, 'days');\n  }\n\n  return result;\n}\n\nfunction parseCSV(text) {\n  return S(text).trim().s.split('\\n').map(function (line) {\n    return S(line).trim().parseCSV();\n  });\n}\n\nfunction toDate(value, valueForError) {\n  try {\n    var date = new Date(value);\n\n    if (date.getFullYear() < 1400) {\n      return null;\n    }\n\n    return date;\n  } catch (err) {\n    if (_.isUndefined(valueForError)) {\n      return null;\n    } else {\n      return valueForError;\n    }\n  }\n}\n\nfunction toFloat(value, valueForNaN) {\n  var result = parseFloat(value);\n\n  if (isNaN(result)) {\n    if (_.isUndefined(valueForNaN)) {\n      return null;\n    } else {\n      return valueForNaN;\n    }\n  } else {\n    return result;\n  }\n}\n\nfunction toInt(value, valueForNaN) {\n  var result = parseInt(value, 10);\n\n  if (isNaN(result)) {\n    if (_.isUndefined(valueForNaN)) {\n      return null;\n    } else {\n      return valueForNaN;\n    }\n  } else {\n    return result;\n  }\n}\n\nexports.camelize = camelize;\nexports.download = download;\nexports.downloadRSS = downloadRSS;\nexports.getDateRanges = getDateRanges;\nexports.parseCSV = parseCSV;\nexports.toDate = toDate;\nexports.toFloat = toFloat;\nexports.toInt = toInt;","map":{"version":3,"sources":["/home/jlavan1/classProject/BusinessDashboard-/businessdashboard/node_modules/google-finance/lib/utils.js"],"names":["url","require","util","_","S","debug","FeedParser","Promise","request","camelize","text","slugify","s","download","uri","qs","optionalHttpRequestOptions","format","pathname","query","extend","downloadRSS","resolve","reject","parser","result","req","on","err","res","statusCode","Error","pipe","item","read","push","getDateRanges","from","to","d","clone","d2","add","subtract","isAfter","parseCSV","trim","split","map","line","toDate","value","valueForError","date","Date","getFullYear","isUndefined","toFloat","valueForNaN","parseFloat","isNaN","toInt","parseInt","exports"],"mappings":"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","sourcesContent":["var url = require('url');\nvar util = require('util');\n\nvar _ = require('lodash');\nvar S = require('string');\nvar debug = require('debug')('google-finance:utils');\nvar FeedParser = require('feedparser');\nvar Promise = require('bluebird');\nvar request = require('request-promise');\n\nfunction camelize(text) {\n  return S(text)\n    .slugify()\n    .camelize()\n    .s;\n}\n\nfunction download(uri, qs, optionalHttpRequestOptions) {\n  debug(url.format({pathname: uri, query: qs}));\n  return request(_.extend({uri: uri, qs: qs}, optionalHttpRequestOptions));\n}\n\nfunction downloadRSS(uri, qs, optionalHttpRequestOptions) {\n  debug(url.format({pathname: uri, query: qs}));\n  return new Promise(function (resolve, reject) {\n    var parser = new FeedParser();\n    var result = [];\n\n    var req = request(_.extend({\n      uri: uri,\n      qs: qs\n    }, optionalHttpRequestOptions));\n\n    req\n      .on('error', function (err) {\n        reject(err);\n      })\n      .on('response', function (res) {\n        if (res.statusCode !== 200) {\n          return reject(new Error(util.format('status %d', res.statusCode)));\n        }\n        this.pipe(parser);\n      });\n\n    parser\n      .on('error', function (err) {\n        reject(err);\n      })\n      .on('end', function () {\n        resolve(result);\n      })\n      .on('readable', function () {\n        var item;\n        while (item = this.read()) {\n          result.push(item);\n        }\n      });\n  });\n}\n\nfunction getDateRanges(from, to) {\n  var result = [];\n  var d = from.clone();\n\n  while (true) {\n    var d2 = d.clone().add(10, 'years').subtract(1, 'days');\n    if (d2.isAfter(to)) {\n      result.push({\n        from: d.clone(),\n        to: to.clone()\n      });\n      break;\n    } else {\n      result.push({\n        from: d.clone(),\n        to: d2.clone()\n      });\n    }\n    d = d2.add(1, 'days');\n  }\n\n  return result;\n}\n\nfunction parseCSV(text) {\n  return S(text).trim().s.split('\\n').map(function (line) {\n    return S(line).trim().parseCSV();\n  });\n}\n\nfunction toDate(value, valueForError) {\n  try {\n    var date = new Date(value);\n    if (date.getFullYear() < 1400) { return null; }\n    return date;\n  } catch (err) {\n    if (_.isUndefined(valueForError)) {\n      return null;\n    } else {\n      return valueForError;\n    }\n  }\n}\n\nfunction toFloat(value, valueForNaN) {\n  var result = parseFloat(value);\n  if (isNaN(result)) {\n    if (_.isUndefined(valueForNaN)) {\n      return null;\n    } else {\n      return valueForNaN;\n    }\n  } else  {\n    return result;\n  }\n}\n\nfunction toInt(value, valueForNaN) {\n  var result = parseInt(value, 10);\n  if (isNaN(result)) {\n    if (_.isUndefined(valueForNaN)) {\n      return null;\n    } else {\n      return valueForNaN;\n    }\n  } else  {\n    return result;\n  }\n}\n\nexports.camelize = camelize;\nexports.download = download;\nexports.downloadRSS = downloadRSS;\nexports.getDateRanges = getDateRanges;\nexports.parseCSV = parseCSV;\nexports.toDate = toDate;\nexports.toFloat = toFloat;\nexports.toInt = toInt;\n"]},"metadata":{},"sourceType":"script"}